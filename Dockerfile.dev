ARG ALPINE_VERSION=3.19
FROM alpine:${ALPINE_VERSION}
# 运行目录
WORKDIR /app/www

# 安装软件包
RUN apk add --no-cache \
  bash \
  curl \
  nginx \
  php82 \
  php82-ctype \
  php82-curl \
  php82-dom \
  php82-fileinfo \
  php82-fpm \
  php82-gd \
  php82-gettext \
  php82-intl \
  php82-iconv \
  php82-mbstring \
  php82-mysqli \
  php82-opcache \
  php82-openssl \
  php82-phar \
  php82-sodium \
  php82-session \
  php82-simplexml \
  php82-tokenizer \
  php82-xml \
  php82-xmlreader \
  php82-xmlwriter \
  php82-zip \
  php82-pdo \
  php82-pdo_mysql \
  php82-pdo_sqlite \
  php82-pecl-swoole \
  supervisor

# 配置 nginx - http
COPY config/nginx.conf /etc/nginx/nginx.conf

# 配置 PHP-FPM
ENV PHP_INI_DIR /etc/php82
COPY config/fpm-pool.conf ${PHP_INI_DIR}/php-fpm.d/www.conf
COPY config/php.ini ${PHP_INI_DIR}/conf.d/custom.ini

# 配置 supervisord
COPY config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# 可通过 --build-arg APP_SRC_DIR=your-dir 指定应用源码目录，默认 epay-2024
ARG APP_SRC_DIR=epay-2024
# 将本地目录内容复制到镜像内的备份源目录，容器首次启动时再复制到 /app/www
COPY ${APP_SRC_DIR}/ /usr/src/www/

RUN adduser -D -s /sbin/nologin -g www www && chown -R www.www /usr/src/www /var/lib/nginx /var/log/nginx

# -----------------------
# Cron: 默认备份模板（php CLI 执行 cron.php）
# -----------------------
# 模板使用占位符 __CRON_KEY__，entrypoint 启动时会替换成真实的 cronkey
ENV CRON_KEY=""
RUN mkdir -p /usr/src/cron \
 && cat > /usr/src/cron/www.tpl <<'CRON'
# 1) 订单统计：每日 00:01 执行一次
1 0 * * * /usr/bin/php82 -r 'if(!isset($_SERVER["HTTP_USER_AGENT"]))$_SERVER["HTTP_USER_AGENT"]="CLI"; chdir("/app/www"); parse_str("do=order&key=__CRON_KEY__", $_GET); include "cron.php";'
# 2) 自动生成结算：每日 00:2 执行一次
2 0 * * * /usr/bin/php82 -r 'if(!isset($_SERVER["HTTP_USER_AGENT"]))$_SERVER["HTTP_USER_AGENT"]="CLI"; chdir("/app/www"); parse_str("do=settle&key=__CRON_KEY__", $_GET); include "cron.php";'
# 3) 订单异步通知重试：每分钟执行一次
* * * * * /usr/bin/php82 -r 'if(!isset($_SERVER["HTTP_USER_AGENT"]))$_SERVER["HTTP_USER_AGENT"]="CLI"; chdir("/app/www"); parse_str("do=notify&key=__CRON_KEY__", $_GET); include "cron.php";'
CRON

# 复制 entrypoint 脚本
ARG ENTRYPOINT_FILE=entrypoint.sh
COPY ${ENTRYPOINT_FILE} /entrypoint.sh
RUN chmod +x /entrypoint.sh

# 开放端口
EXPOSE 80

# 只保留 ENTRYPOINT，CMD 留空（或干脆不写）
ENTRYPOINT ["sh", "/entrypoint.sh"]
CMD []
